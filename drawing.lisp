(in-package #:tictac)

(defvar *png-width* 300)
(defvar *png-height* 300)

(defun write-x-png (filename)
  (vecto:with-canvas (:width *png-width* :height *png-height*)
    (vecto:set-line-width 2)
    (vecto:move-to 2 2)
    (vecto:line-to (- *png-width* 2) (- *png-height* 2))
    (vecto:move-to 2 (- *png-height* 2))
    (vecto:line-to (- *png-width* 2) 2)
    (vecto:stroke)
    (vecto:save-png filename)))

(defun write-o-png (filename)
  (let ((half-width (ash *png-width* -1)))
    (vecto:with-canvas (:width *png-width* :height *png-height*)
      (vecto:set-line-width 2)
      (vecto:centered-circle-path half-width
                                  (ash *png-height* -1)
                                  (- half-width 2))
      (vecto:stroke)
      (vecto:save-png filename))))

(defun write-grid-png (filename)
  (vecto:with-canvas (:width *png-width* :height *png-height*)
    (vecto:set-line-width 2)
    (loop for x in (list (float (/ *png-width* 3))
                         (float (* *png-width* 2/3)))
          do (progn (vecto:move-to x 2)
                    (vecto:line-to x (- *png-height* 2))))
    (loop for y in (list (float (/ *png-height* 3))
                         (float (* *png-height* 2/3)))
          do (progn (vecto:move-to 2 y)
                    (vecto:line-to (- *png-width* 2) y)))
    (vecto:stroke)
    (vecto:save-png filename)))
