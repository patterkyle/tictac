(in-package #:tictac)

(defvar *png-width* 800)
(defvar *png-height* 600)

(defun write-x-png (filename)
  (vecto:with-canvas (:width *png-width* :height *png-height*)
    (vecto:set-line-cap :round)
    (vecto:move-to 0 0)
    (vecto:line-to *png-width* *png-height*)
    (vecto:move-to 0 *png-height*)
    (vecto:line-to *png-width* 0)
    (vecto:stroke)
    (vecto:save-png filename)))

(defun write-o-png (filename)
  (let ((half-width (ash *png-width* -1)))
    (vecto:with-canvas (:width *png-width* :height *png-height*)
      (vecto:centered-circle-path half-width
                                  (ash *png-height* -1)
                                  half-width)
      (vecto:stroke)
      (vecto:save-png filename))))

(defun write-grid-png (filename)
  (vecto:with-canvas (:width *png-width* :height *png-height*)
    (vecto:set-line-cap :round)
    (loop for x in (list (float (/ *png-width* 3))
                         (float (* *png-width* 2/3)))
          do (progn (vecto:move-to x 0)
                    (vecto:line-to x *png-height*)))
    (loop for y in (list (float (/ *png-height* 3))
                         (float (* *png-height* 2/3)))
          do (progn (vecto:move-to 0 y)
                    (vecto:line-to *png-width* y)))
    (vecto:stroke)
    (vecto:save-png filename)))
